<AML>
 <Item type="Method" id="D6207CE142C14423B43F8C779357A7AB" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[Innovator innov=this.getInnovator();
I18NSessionContext cntx=innov.getI18NSessionContext();
// System.Diagnostics.Debugger.Break();
// get new ces from config report
string compare_upgrade_id = this.getProperty("compare_upgrade_id","");
if (compare_upgrade_id=="")
{
    return innov.newError("Please select a DatabaseUpgrade to compare");
}
string source_id= this.getID();  // id of ConigurationManager
Item dbu=innov.getItemById("DatabaseUpgrade",compare_upgrade_id);
string since=dbu.getProperty("applied_on");
Item qry1 = this.newItem("SQL","SQL PROCESS");
qry1.setProperty("name","ConfigurationReport");
qry1.setProperty("PROCESS","CALL");
qry1.setProperty("ARG1", compare_upgrade_id);
Item new_ces = qry1.apply();
if (new_ces.isError()) {return new_ces;	}


// get existing ces from context item
Item qry3= this.newItem("ConfigurationElement", "get");
qry3.setProperty("source_id",source_id);
Item old_ces=qry3.apply();
if (old_ces.isError()&& (!old_ces.isEmpty())) return old_ces;
string xp_find_ce_templ="//Item[element_id='{0}']";
string xp_find_ce_templ2="//Item[id='{0}']";
// update or delete old ces
for (int i=0;i<old_ces.getItemCount();i++)
{
    Item this_old_ce = old_ces.getItemByIndex(i);
    string xp_find_ce=string.Format(xp_find_ce_templ2,this_old_ce.getProperty("element_id"));
    Item this_new_ce =new_ces.getItemsByXPath(xp_find_ce).getItemByIndex(0);
    if(!this_new_ce.isEmpty())
    {
        // ce already in cm, update modified_on and modified_by only
        this_old_ce.setProperty("pe_modified_on",cntx.ConvertToNeutral(this_new_ce.getProperty("modified_on"),"date"));
        this_old_ce.setProperty("pe_modified_by",this_new_ce.getProperty("modified_by"));
        // also update package, it might have been added
        this_old_ce.setProperty("package_definition",this_new_ce.getProperty("package"));
    }
    else
    {
        this_old_ce.setAttribute("isDelete","1"); // what circumstances produce this case?
    }
}
// add new ces
for (int i=0;i<new_ces.getItemCount();i++)
{
    Item this_new_ce =new_ces.getItemByIndex(i);
    string xp_find_ce=string.Format(xp_find_ce_templ,this_new_ce.getProperty("id"));
    Item this_old_ce =old_ces.getItemsByXPath(xp_find_ce);
    if(this_old_ce.getItemCount()==0)
    {
        // there is a new ce, add it mapping properties
        Item new_ce = this.newItem("ConfigurationElement");
        new_ce.setProperty("package_definition",this_new_ce.getProperty("package"));
        new_ce.setProperty("package_group",this_new_ce.getProperty("group"));
        new_ce.setProperty("package_element",this_new_ce.getProperty("keyed_name"));
        new_ce.setProperty("element_id",this_new_ce.getProperty("id"));
        new_ce.setProperty("pe_created_on",cntx.ConvertToNeutral(this_new_ce.getProperty("created_on"),"date"));
        new_ce.setProperty("pe_modified_on",cntx.ConvertToNeutral(this_new_ce.getProperty("modified_on"),"date"));
        new_ce.setProperty("pe_modified_by",this_new_ce.getProperty("modified_by"));
        if (old_ces.isEmpty()) old_ces=new_ce;
        else old_ces.appendItem(new_ce);
    }
}
// make changes to ces
for (int i=0;i<old_ces.getItemCount();i++)
{
    string this_action="edit";
    Item this_ce=old_ces.getItemByIndex(i);
    if (this_ce.getAttribute("isNew")=="1") this_action="add";
    if (this_ce.getAttribute("isDelete")=="1") this_action="delete";
    this_ce.setProperty("source_id",source_id);
   Item res= this_ce.apply(this_action);
}


return innov.newResult("OK");]]></method_code>
  <method_type>C#</method_type>
  <name>cm_update_config_elements</name>
 </Item>
</AML>